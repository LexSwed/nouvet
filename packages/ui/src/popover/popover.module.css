@import "@nou/config/theme.css" theme(reference);

/* Avoid consumers overriding this for all states with e.g. display: flex */
@layer utilities {
  .popover:not(:popover-open) {
    display: none;
  }
}
@layer tw-base {
  :global(body):has(
      .popover[data-placement="center"]:not([data-state="closed"]),
      .drawer:not([data-state="closed"])
    ) {
    overflow: hidden;
    pointer-events: none;
  }
}

@layer components {
  .popover {
    background-color: theme("colors.surface");
    color: theme("colors.on-surface");
    isolation: isolate;
    transition: opacity 0.16s, transform 0.24s, display 0.24s, overlay 0.24s,
      height 0.4s;
    transition-behavior: allow-discrete;
    width: max-content;
    will-change: transform, opacity;
    margin: 0;
    inset: auto;
    max-width: calc(100svw - theme("spacing.4"));
    max-height: calc(100svh - theme("spacing.4"));
    content-visibility: auto;
    position-try-options: flip-block, flip-inline;
    overflow: auto;
    pointer-events: all;
    box-shadow: theme(shadow.popover);
    border-radius: theme(radius.2xl);

    &:empty {
      visibility: hidden;
      animation-play-state: paused;
    }

    &[role="menu"] {
      padding: theme("spacing.1");
    }
    &[role="dialog"] {
      padding: theme("spacing.4");
    }

    &:popover-open {
      opacity: 1;
      transform: none;

      @starting-style {
        opacity: 0;
        transform: scale(0.98);
      }
    }
    &:where(:not(:popover-open)) {
      transition-duration: 0.1s;
      transition-timing-function: ease-in;
      opacity: 0;
    }
    &::backdrop {
      transition: all 0.24s ease allow-discrete;
      opacity: 1;
    }
    &:not(:popover-open) {
      &::backdrop {
        opacity: 0;
      }
    }

    &:where(
        [data-placement*="left-to-right"],
        [data-placement*="right-to-left"]
      ) {
      margin-inline: theme("spacing.2");
    }
    &:where(
        [data-placement*="top-to-bottom"],
        [data-placement*="bottom-to-top"]
      ) {
      margin-block: theme("spacing.2");
    }

    &:where([data-placement*="top"], [data-placement*="bottom"]):not(
        [data-placement*=" "]
      ) {
      inset-inline-start: anchor(center);
      justify-self: anchor-center;
    }
    &:where([data-placement*="left"], [data-placement*="right"]):not(
        [data-placement*=" "]
      ) {
      inset-block-start: anchor(center);
      align-self: anchor-center;
    }
    &:where([data-placement="center"]) {
      transform-origin: center;
      margin: auto;
      inset: 0;
      &::backdrop {
        opacity: 1;
        transition: opacity 0.16s ease;
        background-color: theme("colors.on-surface/0.5");
      }

      &:not(:popover-open) {
        transform: translateY(1rem);
        &::backdrop {
          opacity: 0;
        }
      }
    }
    &:where([data-placement^="top"]) {
      transform-origin: center top;
    }
    &:where([data-placement^="bottom"]) {
      transform-origin: center bottom;
    }
    &:where([data-placement^="left"]) {
      transform-origin: left center;
    }
    &:where([data-placement^="right"]) {
      transform-origin: right center;
    }
    &:where([data-placement^="top"][data-placement*="left-to-"]) {
      transform-origin: left top;
    }
    &:where([data-placement^="bottom"][data-placement*="left-to-"]) {
      transform-origin: left bottom;
    }
    &:where([data-placement^="top"][data-placement*="right-to-"]) {
      transform-origin: right top;
    }
    &:where([data-placement^="bottom"][data-placement*="right-to-"]) {
      transform-origin: right bottom;
    }
  }

  @starting-style {
    .popover:where([data-placement="center"]) {
      &:popover-open {
        transform: translateY(1rem);
      }

      &::backdrop {
        opacity: 0;
      }
    }
  }

  @media not all and (min-width: theme("screens[sm]")) {
    .drawer:is(.popover) {
      pointer-events: all;
      position: fixed;
      position-anchor: unset !important;
      padding: theme("spacing.2") theme("spacing.4") theme("spacing.4");
      inset-block: auto theme("spacing.2");
      inset-inline: theme("spacing.2");
      margin: 0;
      height: max-content;
      width: max(calc(100% - theme("spacing.2") * 2), theme(screens.sm));
      max-height: 100svh;
      padding-top: theme("spacing.8");
      opacity: 1;
      transform: none;
      transform-origin: top center;
      &:focus-visible {
        outline: 2px auto theme("colors.on-surface");
        outline-offset: -2px;
      }
      &::backdrop {
        /* backdrop-filter: none; */
        background-color: theme("colors.on-surface/0.5");
      }
      &:not(:popover-open) {
        transform: translate3d(0, 100%, 0) !important;
      }
    }

    :global(body) {
      transition: transform 0.4s ease;
      isolation: isolate;
      will-change: transform;
      transform: perspective(16rem);
    }
    :global(body):has(.drawer:popover-open) {
      transform: perspective(16rem) translate3d(0, -1rem, -1rem);
    }

    @starting-style {
      .drawer:is(.popover):popover-open {
        transform: translate3d(0, 100%, 0) !important;
        &::backdrop {
          /* backdrop-filter: none; */
          opacity: 0;
        }
      }
    }
  }
}
